/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("java")
    id("jacoco")
    id("maven-publish")
    id("signing")
    id("com.diffplug.spotless") version "7.0.2"
    id("com.gradleup.shadow") version "8.3.1"
}

dependencies {
    implementation("com.google.code.gson:gson:2.11.0")
    implementation("org.sonarsource.analyzer-commons:sonar-analyzer-commons:2.16.0.3141")
    compileOnly("org.sonarsource.api.plugin:sonar-plugin-api:10.1.0.809")
    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    testImplementation("org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures:10.1.0.809")
    testImplementation("org.sonarsource.sonarqube:sonar-plugin-api-impl:10.1.0.73491")
    testImplementation(platform("org.junit:junit-bom:5.10.2"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("org.assertj:assertj-core:3.26.0")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.jar {
    dependsOn(tasks.shadowJar)
    manifest {
        attributes(
            mapOf(
                "Plugin-Key" to "rust",
                "Plugin-Name" to "Rust Code Quality and Security",
                "Plugin-Version" to project.version,
                "Implementation-Version" to project.version, // class.getPackage().getImplementationVersion()
                "Plugin-Class" to "com.sonarsource.rust.plugin.RustPlugin",
                "Plugin-RequiredForLanguages" to "rust",
            )
        )
    }
}

tasks.shadowJar {
    dependsOn(":analyzer:compileRust")
    from(project(":analyzer").tasks.named("compileRust").get().outputs.files) {
           into("analyzer")
   }
}

spotless {
    java {
        licenseHeader(
            """
            /*
             * Copyright (C) 2025 SonarSource SA
             * All rights reserved
             * mailto:info AT sonarsource DOT com
             */
            """.trimIndent()
        )
        trimTrailingWhitespace()
    }
}
